抽象工厂模式

    提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类；

        --> 具体的工厂负责实现具体的产品实例。
        --> 允许使用抽象的接口来创建一组相关产品，而不需要知道或关心实际生产出的具体产品是什么，这样就可以从具体产品中被解耦。


    角色：
        --> 抽象工厂类(Factory)
            --> 例子： Dinner

        --> 具体工厂类(ConcreteFactory)
            --> 例子： DinnerFactory

        --> 抽象产品族类(ProductGroup)
            --> 例子： DrinkFactory, FoodFactory

        --> 抽象产品类(Product)
            --> 例子： Drink, Food

        --> 具体产品类(ConcreteProduct)
            --> 例子： DrinkJuice、DrinkSoup, FoodNoodles、FoodRices

    客户端通过实例化具体的工厂类，并调用其创建不同目标产品的方法创建不同具体产品类的实例