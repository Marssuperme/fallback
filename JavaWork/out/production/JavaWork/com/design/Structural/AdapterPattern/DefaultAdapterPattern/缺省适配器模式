缺省适配器模式（单接口适配器）

    不想实现接口里的所有方法，写个基类去继承这个接口，然后重写所有方法，子类再去继承这个基类，按需重写！

    重要核心模块

        --> 适配者接口(ServiceInterface)

            --> 一个接口，通常在该接口中声明了大量的方法。
            --> 例子： Dinner

        --> 缺省适配器类(AbstractServiceClass)

            --> 缺省适配器模式的核心类，使用空方法的形式实现了在ServiceInterface接口中声明的方法。
            --> 通常将它定义为抽象类，因为对它进行实例化没有任何意义。
            --> 例子： BaseDinnerAdapter

        --> 具体业务类(ConcreteServiceClass)

            --> 缺省适配器类的子类，在没有引入适配器之前，它需要实现适配者接口，因此需要实现在适配者接口中定义的所有方法，
                而对于一些无须使用的方法也不得不提供空实现。
            --> 在有了缺省适配器之后，可以直接继承该适配器类，根据需要有选择性地覆盖在适配器类中定义的方法。
            --> 例子： ChineseDinnerAdapter
