三大特性

   --> 封装（Encapsulation）

       --> 不需要知道对象具体实现细节，通过共有方法暴露对象的功能

   --> 继承（Inheritance）

       --> 使用已经存在的类作为基础类（父类），在此基础上建立新类（子类），
       --> 子类既可以复用父类的功能，也能进行扩展，从而提高了代码的复用。

   --> 多态（Polymorphism）

       --> 允许不同类的对象对同一消息作出响应
       --> 主要作用就是用来将接口和实现分离开，改善代码的组织结构，增强代码的可读性。
       --> 一个类实例的相同方法在不同情形下有不同的表现形式，一般有两种

           --> 编译时多态(OverLoading) —— 方法重载
           --> 运行时多态(OverRidding) —— 继承 + 方法重写 + 父类引用指向子类对象



